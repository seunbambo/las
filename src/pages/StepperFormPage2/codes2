import React,{useState} from 'react';
import DashboardLayout from '../../layouts/DashboardLayout';
import Grid from '@material-ui/core/Grid';
import Typography from '@material-ui/core/Typography';
import Button from '@material-ui/core/Button';
import Paper from '@material-ui/core/Paper';
import { amber, green } from '@material-ui/core/colors';
import TextField from '@material-ui/core/TextField';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import InputLabel from '@material-ui/core/InputLabel';
import PreviousButton from './previousButton'
import FormControl from '@material-ui/core/FormControl';
import Checkbox from '@material-ui/core/Checkbox';
import InputBase from '@material-ui/core/InputBase';
import Avatar from '@material-ui/core/Avatar';
import { useHistory } from "react-router-dom";
import MenuItem from '@material-ui/core/MenuItem';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import StarIcon from '@material-ui/icons/Star';
import Select from '@material-ui/core/Select';
import './RegisterSalesAndLeases.css';
import SnackBar from './SnackBar';
import useForm from 'react-hook-form'


import home3 from './home3.png'
import {
    fade,
    ThemeProvider,
    withStyles,
    makeStyles,
    createMuiTheme,
  } from '@material-ui/core/styles';
import { NONAME } from 'dns';



  const useStyles = makeStyles(theme => ({
    root: {
      display: 'flex',
    },
    rootList: {
      width: '100%',
      maxWidth: 360,
      backgroundColor: theme.palette.background.paper,
    },

    margin: {
      [theme.breakpoints.down('sm')]: {
        width: '95%', float: 'none',
      },     

    },
   card: {
    position: 'relative'
   },
    rightSide: {
        width: '60%', float: 'left',
        [theme.breakpoints.down('sm')]: {
          width: '88%', float: 'none', marginLeft: 10
        },     
    },
    leftSide: {
        width: '30%', float: 'left',
        [theme.breakpoints.down('sm')]: {
          width: '95%', float: 'none',
        },     
    },
    rightSide2: {
      width: '5%',
      float: 'left',
      marginLeft: '3%',
      
      [theme.breakpoints.down('sm')]: {
        width: '95%', float: 'none',
      },  
    },
    formContainer: {
        minWidth:200, 
        cursor: 'pointer',
        minHeight:210,
        position: 'relative',
        border: '1px solid gray',
        [theme.breakpoints.down('sm')]: {
          display: 'none'
        },   
  },
  formContainerText: {
    textAlign: 'center',
    paddingTop: 24
  },

  counterColumn: {
    width:'100%', height:50, backgroundColor:'#024d71',
    bottom: 0,
    position: 'absolute'
  },

  formContainerImage: {
    width: 100,
    height: 100,
    margin: 'auto',
    marginTop: '29px',
         
   
  },
  contain: {
    marginLeft: '6%',
    [theme.breakpoints.down('sm')]: {
      marginLeft: 0,
      width: '100%!important'
    },   
  },
  btnCategory: {
      width: '100%'
  },

  buttonCont: {
    margin:'auto'
  },

  submit: {
    margin: theme.spacing(3, 0, 2),
  },
  success: {
    backgroundColor: green[600],
  },
  error: {
    backgroundColor: theme.palette.error.dark,
  },
  info: {
    backgroundColor: theme.palette.primary.main,
  },
  formSize: {
    width: '100%important'
  },
  warning: {
    backgroundColor: amber[700],
  },
  icon: {
    fontSize: 20,
  },
  iconVariant: {
    opacity: 0.9,
    marginRight: theme.spacing(1),
  },
  message: {
    display: 'flex',
    alignItems: 'center',
  },
  }));
  


const BootstrapInput = withStyles(theme => ({
    root: {
      'label + &': {
        marginTop: theme.spacing(2),
        fontSize: 12,
        color: '#072455'
      },
    },
    input: {
      borderRadius: 4,
      marginTop: 15,
      position: 'relative',
      backgroundColor: theme.palette.common.white,
      border: '1px solid #072455',
      color: '#072455',
      fontSize: 12,
      width: 200,
      [theme.breakpoints.down('sm')]: {
        padding: '15px 10px',
        
      },   
      padding: '15px 15px',
      transition: theme.transitions.create(['border-color', 'box-shadow']),
      // Use the system font instead of the default Roboto font.
      fontFamily: [
        '-apple-system',
        'BlinkMacSystemFont',
        '"Segoe UI"',
        'Roboto',
        '"Helvetica Neue"',
        'Arial',
        'sans-serif',
        '"Apple Color Emoji"',
        '"Segoe UI Emoji"',
        '"Segoe UI Symbol"',
      ].join(','),
      '&:focus': {
        boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,
        borderColor: theme.palette.primary.main,
      },
    },
  }))(InputBase);

export default function RegisterSalesAndLeases(props) {
  // form methods
  const { register, handleSubmit } = useForm()
  const [count, setCount] = useState(1);
  const onSubmit = data => {console.log("this is the form data",data)}

    const classes = useStyles();
    const currentPage = props.match.params.category_id;
    let history = useHistory();
  
  // function handleSubmit() {
  //   history.push("/dashboard");
  // }

  const currentItems = [ 
      <SnackBar message="Type of Property"/>,
      <SnackBar message="Buyers Information"/>,
      <SnackBar message="Sellers Information"/>
  ]



const itemSelector =() => {
  return currentItems.slice(0,count)
} 

const nextItem = (type="",) => {
  if(type=="increment"){
    count===3?setCount(1):setCount(count+1)
  }
  else if(type==="decrement"){
    count==1?setCount(1):setCount(count -1)
  }


}
  
  return (
    <DashboardLayout width="100%" showCurvedFooter={false} showFooter={true} showBackgroundImage={false} backgroundColor="white" height="700px">
{/* <Grid container spacing={10} >
<Grid item md={4}></Grid>
<Grid item xs={10} sm={10} md={8}>
    
    {itemSelector()}

</Grid>
</Grid> */}

<div className={classes.leftSide}>
    <Grid container spacing={10} className={classes.contain}>
        <Grid item xs={10} sm={3} md={2} className={classes.card}>
        <div data-id="1" className={classes.formContainer} style={{borderSize:1}}>
        <Avatar alt="Remy Sharp" src={home3} className={classes.formContainerImage} />
        <Typography className={classes.formContainerText}>{currentPage}</Typography>
        <div className={classes.counterColumn}> <h5 className="card__bottom--text">{count}/3</h5></div>
        </div>

        </Grid>
    </Grid>
</div>

<form onSubmit={handleSubmit(onSubmit)}>
  
{count==1 &&
<div className={classes.rightSide}>
  

      <Grid container spacing={2}>      
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Firstname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="firstname" placeholder="firstname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Lastname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="lastname" placeholder="lastname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        
        {/* <BootstrapInput inputRef={register} name="gender" placeholder="Gender" id="bootstrap-input" /> */}
        <div class="custom-select" style={{width:200}}>
  <select name="gender" ref={register}>
    <option value="male">Male</option>
    <option value="female">Female</option>
    
  </select>
</div>
    </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>
       
    
      </Grid>

      </div>
}
  
{count==2 &&
<div className={classes.rightSide}>
  

      <Grid container spacing={2}>      
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Firstname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="firstname" placeholder="firstname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Lastname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="lastname" placeholder="lastname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>

        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>

        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>
      </Grid>

      </div>
}
  
{count==3 &&
<div className={classes.rightSide}>
  

      <Grid container spacing={2}>      
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Firstname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="firstname" placeholder="firstname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} sm={6} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Lastname*
        </InputLabel>
        <BootstrapInput inputRef={register} name="lastname" placeholder="lastname" id="bootstrap-input" />
        </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        
        {/* <BootstrapInput inputRef={register} name="gender" placeholder="Gender" id="bootstrap-input" /> */}
        <div class="custom-select" style={{width:200}}>
  <select name="gender" ref={register}>
    <option value="male">Male</option>
    <option value="female">Female</option>
    
  </select>
</div>
    </FormControl>
        </Grid>
        <Grid item xs={10} md={4}>
        <FormControl className={classes.margin}>
        <InputLabel shrink htmlFor="bootstrap-input">
          Email*
        </InputLabel>
        <BootstrapInput inputRef={register} name="email" placeholder="Email" id="bootstrap-input" type="email"/>
    </FormControl>
        </Grid>

      </Grid>
   
      </div>
     
}
<div className={classes.rightSide2}><PreviousButton  clickHandler={() =>nextItem("decrement") }/></div>
<Grid item xs={10} sm={12} md={6} className={classes.buttonCont}>
      <Button
      type="submit"
      fullWidth
      variant="contained"
      color="primary"
      onClick={() => nextItem("increment")}
      className={classes.submit}
    >Continue</Button>
    </Grid>

      </form>
      
    </DashboardLayout>
  );
}
